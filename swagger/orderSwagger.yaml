---
swagger: "2.0"
info:
  description: This API is part of Fujitsu's Cloud Lab Demo
  version: 1.0.0
  title: FAI Order API
  contact:
    email: sachin.jain@fujitsu.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
# basePath: /orderManagement/fai-order-api/v1
tags:
- name: reads
  description: -- retriever operations
- name: writes
  description: -- writer operations
schemes:
- https
- http
paths:
  /orders:
    post:
      tags:
        - Orders
      summary: This feature enables checkout of services/products selected by the end customer. A successful checkout results in creation of an order.
      operationId: orderCreate
      consumes:
        - application/json
        - application/xml
        - text/xml
      produces:
        - application/json
        - application/xml
        - text/xml
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          required: true
          type: string
        - name: channelId
          in: header
          description: The ID of the channel through which the order is getting placed
          required: true
          type: string
        - in: body
          name: orderRequest
          description: items to be checked out
          required: true
          schema:
            $ref: '#/definitions/orderInput'
      responses:
        '201':
          description: order created successfully
          schema:
            $ref: '#/definitions/orderResponse'
        '400':
          description: Invalid Request. Mandatory data missing or invalid date format or any invalid input.
          schema:
            $ref: '#/definitions/errorResponses'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorResponses'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errorResponses'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponses'
        '415':
          description: Unsupported MIME Type
          schema:
            $ref: '#/definitions/errorResponses'
        '500':
          description: Internal Server Error. System down or any runtime error.
          schema:
            $ref: '#/definitions/errorResponses'
        '502':
          description: Bad Gateway. Retuned when the gateway receives aninvalid response from the upstream server.
          schema:
            $ref: '#/definitions/errorResponses'
        '503':
          description: Service Unavailable. The server is currently unable to handle the request due to a temporary overloading or maintenance of the server
          schema:
            $ref: '#/definitions/errorResponses'
        '504':
          description: Gateway Timeout error.
          schema:
            $ref: '#/definitions/errorResponses'
  /orders/{orderId}:
    get:
      tags:
      - reads
      summary: searches order by order id
      description: By passing the right Order ID, you can search the Order from the persistent database.
      operationId: getOrder
      produces:
        - application/json
        - application/xml
        - text/xml
      parameters:
        - name: orderId
          in: path
          description: unique id of the order
          required: true
          type: string
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          required: true
          type: string
      responses:
        '200':
          description: Order retrieved successfully
          schema:
            $ref: '#/definitions/orderResponse'
        '400':
          description: Invalid Request. Mandatory data missing or invalid date format or any invalid input.
          schema:
            $ref: '#/definitions/errorResponses'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorResponses'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errorResponses'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponses'
        '415':
          description: Unsupported MIME Type
          schema:
            $ref: '#/definitions/errorResponses'
        '429':
          description: Too many requests
          schema:
            $ref: '#/definitions/errorResponses'
        '500':
          description: Internal Server Error. System down or any runtime error.
          schema:
            $ref: '#/definitions/errorResponses'
        '502':
          description: Bad Gateway. Retuned when the gateway receives aninvalid response from the upstream server.
          schema:
            $ref: '#/definitions/errorResponses'
        '503':
          description: Service Unavailable. The server is currently unable to handle the request due to a temporary overloading or maintenance of the server
          schema:
            $ref: '#/definitions/errorResponses'
        '504':
          description: Gateway Timeout error.
          schema:
            $ref: '#/definitions/errorResponses'
    delete:
      tags:
        - deleteOrder
      summary: This feature enables consumer to delete an existing order.
      operationId: deleteOrder
      consumes:
        - application/json
        - application/xml
        - text/xml
      produces:
        - application/json
        - application/xml
        - text/xml
      parameters:
        - name: orderId
          in: path
          description: unique id of the order
          required: true
          type: string
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          required: true
          type: string
      responses:
        '204':
          description: Order deleted successfully
        '400':
          description: Invalid Request. Mandatory data missing or invalid date format or any invalid input.
          schema:
            $ref: '#/definitions/errorResponses'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorResponses'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errorResponses'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponses'
        '415':
          description: Unsupported MIME Type
          schema:
            $ref: '#/definitions/errorResponses'
        '500':
          description: Internal Server Error. System down or any runtime error.
          schema:
            $ref: '#/definitions/errorResponses'
        '502':
          description: Bad Gateway. Retuned when the gateway receives aninvalid response from the upstream server.
          schema:
            $ref: '#/definitions/errorResponses'
        '503':
          description: Service Unavailable. The server is currently unable to handle the request due to a temporary overloading or maintenance of the server
          schema:
            $ref: '#/definitions/errorResponses'
        '504':
          description: Gateway Timeout error.
          schema:
            $ref: '#/definitions/errorResponses'
definitions:
  orderInput:
    type: object
    required:
      - selectedOffers
    properties:
      pointOfSale:
        $ref: '#/definitions/pointOfSale'
      selectedOffers:
        type: array
        description: Selected Offer represents an array of  Selected Offer.. OfferId/OfferItems and CartId/CartItems are mutually exclusive.
        items:
          $ref: '#/definitions/Offer'
      formOfPayment:
        $ref: '#/definitions/formOfPayment'
        type: object
        description: Form Of Payments represents Payment details
      customer:
        type: object
        $ref: '#/definitions/customer'
        description: Customers represents an array of Customer
          
    description: Order Input represents the data sent by the consumer to create an order.
  orderResponse:
    type: object
    properties:
      orderId:
        type: string
        description: Order Identifier represents a carrier assigned ID which uniquely identifies a specific Order
      orderStatus:
        type: string
        description: Order Status represents current status of the Order
        example: 'COMPLETED'
      orderCreationUtcTs:
        type: string
        example: '2018-04-17T20:02:28+0500'
        description: Order Creation UTC Timestamp is the timestamp.
        pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[\+\-]\d{4})$'
      orderDeletedUtcTs:
        type: string
        example: '2018-04-17T20:02:28+0500'
        description: Order Deleted UTC Timestamp is the timestamp.
        pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[\+\-]\d{4})$'
      pointOfSale:
        $ref: '#/definitions/pointOfSale'
      customer:
        type: object
        description: Customers represents an array of Customer.
        $ref: '#/definitions/customer'
      formOfPayment:
        type: object
        description: Payment details
        $ref: '#/definitions/formOfPayment'
      products:
        type: array
        description: Product details
        items:
          $ref: '#/definitions/Product'
  pointOfSale:
    type: object
    properties:
      countryCode:
        type: string
        example: US
        description: Country Code specifies a region or territory. Example- US = United States of America (ISO 3166-1 alpha-2 format)
        pattern: '^[A-Z]{2}$'
      pointOfSaleCityCode:
        type: string
        description: 'Point Of Sale City Code represents the municipality or urban area where an entity, authorized to sell transportation and related goods and services on behalf of an airline, is located.'
      pointOfSaleId:
        type: string
        description: 'Point Of Sale Identifier uniquely identifies an entity which may perform several functions in regards to sales transactions. It may make reservations and/or report sales transactions to a central reporting location and/or issue ticket documents. It may be a travel agency or a BARTS location or some other entity, such as a GSA.'
      ipAddress:
        type: string
        description: IP Address Text denotes the ipAddress from where the request got initiated
      browserType:
        type: string
        description: Browser Type Text denotes the browser used by the consumer from where the request got initiated
    description: Point Of Sale represents certain attributes regarding the point at which the sale of a travel services or ancillary products occur.
  Offer:
    type: object
    properties:
      offerId:
        type: string
        description: Offer Identifier uniquely identifies an offer.
      totalOfferAmt:
        type: string
        description: Total offer amount in USD.
      product:
        type: array
        description: product details
        items:
          $ref: '#/definitions/Product'
      offerType:
        type: string
        description: type of the offer.
    description: Selected Offer are the items for an order. Either offerId or cartId must be present.
  Product:
    type: object
    required:
    - productCategory
    - productCode
    - productType
    - productPrice
    - productDescription
    properties:
      productCode:
        type: string
        example: LPTP001
      productType:
        type: string
        example: Laptop
      productCategory:
        type: string
        example: Home Computing
      productDescription:
        type: string
        example: Laptop XPS7950
      productPrice:
        type: object
        $ref: '#/definitions/Price'
  customer:
    type: object
    properties:
      customerId:
        type: string
        description: Customer Identifier represents a person or organization that initiates contact with a company or responds to a company initiation of contact.
      emailAddress:
        type: string
        description: |
          Electronic Mail (Email) Address specifies a character string which, when input within a particular context, will direct information to a resource available to a specific owner. 
      firstName:
        type: string
        description: First Name of the customer
      lastName:
        type: string
        description: Last Name of the customer
      billingAddress:
        type: string
        description: Billing address of the customer
      phone:
        type: string
        description: Phone number of the customer.
    description: 'Customer details'
  errorResponses:
    type: object
    properties:
      code:
        type: string
        description: Highest level error code sent by API.
      message:
        type: string
        description: Consumer friendly error message sent by API.
      developerMessage:
        type: string
        description: Technical details about the error for the understanding of API consumer developer.
    description: 'Technical details about the error including error code, message and additional details, if any'
  paymentMethod:
    type: object
    properties:
      paymentMethodType:
        type: string
        description: 'Payment Method Type represents the name of a payment method. Ex: Credit Card, RTBT, Paypal, etc'
      paymentCard:
        $ref: '#/definitions/paymentCard'
      cash:
        $ref: '#/definitions/cash'
    description: 'Payment Method represents a payment object that can be used towards purchasing a product. Ex: Credit Card, RTBT, Paypal, etc'
  paymentCard:
    type: object
    properties:
      cardHolderName:
        type: string
        description: Name of the card holder
      expirationMonth:
        type: string
        description: 'Expiration Month Number is the numeric month that a payment card expires.  Example:  MM, 07'
      expirationYear:
        type: string
        description: 'Expiration Year Number is the numeric year that a payment card expires.  Example:  YY, 20'
      cvv:
        type: string
        description: 'The Card Verification Value (CVV) is the number on the credit card ordebit card is a 3 digit number on VISA, MasterCard and Discover branded credit and debitcards. On an American Express branded credit or debit card it is a 4 digit numeric code.'
      cardNetworkCode:
        type: string
        description: 'Payment Card Network Code is the identifier for the network of a payment card. This is also known as brand.  Examples:  VI, MC, UATP'
      cardNum:
        type: string
        description: 'Payment Card Number is the number found on payment cards, such as credit cards and debit cards, as well as gift cards and other similar cards.'
    description: Payment Card represents a card used to access funds that may be used to make purchases.
  cash:
    type: object
    properties:
      cashAmt:
        type: string
      terminalId:
        type: string
        description: Terminal identifier is the unique identifier where cash was collected.
      cashReceiptId:
        type: string
        example: 121717H47S
        description: Cash Receipt Identifier is the unique identifier for the cash receipt.
    description: Cash used to indicate payment in cash.
  Price:
    type: object
    required:
    - currency
    - value
    properties:
      value:
        type: number
        format: double
        example: 999.99
      currency:
        type: string
        example: USD
        pattern: '^[A-Z]{3}$'
        description: 'Currency Code identifies a medium of exchange which allows for the translation of different-valued denominations of money across the world. Example:  USD = US Dollar  (ISO 4217 format)'  
  formOfPayment:
    type: object
    properties:
      paymentMethod:
        $ref: '#/definitions/paymentMethod'
      price:
        $ref: '#/definitions/Price'
      paymentReferenceId:
        type: string
        description: 'Payment Reference Identifier describes an identifier for payment details, which may represent multiple forms of payment'
    description: Form of Payment represents a single transaction in which a payment method is being used to authorize for a specific amount
# Added by API Auto Mocking Plugin
basePath: /CloudLab2/order/1.0.0